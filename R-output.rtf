{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0  > # 3. Use the library() function to load the dplyr package\
> library(dplyr)\
> #4. Import and read in the MechaCar_mpg.csv file as a dataframe.\
> library(tidyverse)\
> mecha_mpg <- read.csv(file='./data/MechaCar_mpg.csv',check.names=F,stringsAsFactors = F) \
> #5. Perform linear regression using the lm() function\
> lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg)\
\
Call:\
lm(formula = mpg ~ vehicle_length + vehicle_weight + spoiler_angle + \
    ground_clearance + AWD, data = mecha_mpg)\
\
Coefficients:\
     (Intercept)    vehicle_length    vehicle_weight     spoiler_angle  ground_clearance  \
      -1.040e+02         6.267e+00         1.245e-03         6.877e-02         3.546e+00  \
             AWD  \
      -3.411e+00  \
\
> #6. Using the summary() function, determine the p-value and the r-squared value for the linear regression model.\
> summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_mpg)) \
\
Call:\
lm(formula = mpg ~ vehicle_length + vehicle_weight + spoiler_angle + \
    ground_clearance + AWD, data = mecha_mpg)\
\
Residuals:\
     Min       1Q   Median       3Q      Max \
-19.4701  -4.4994  -0.0692   5.4433  18.5849 \
\
Coefficients:\
                   Estimate Std. Error t value Pr(>|t|)    \
(Intercept)      -1.040e+02  1.585e+01  -6.559 5.08e-08 ***\
vehicle_length    6.267e+00  6.553e-01   9.563 2.60e-12 ***\
vehicle_weight    1.245e-03  6.890e-04   1.807   0.0776 .  \
spoiler_angle     6.877e-02  6.653e-02   1.034   0.3069    \
ground_clearance  3.546e+00  5.412e-01   6.551 5.21e-08 ***\
AWD              -3.411e+00  2.535e+00  -1.346   0.1852    \
---\
Signif. codes:  0 \'91***\'92 0.001 \'91**\'92 0.01 \'91*\'92 0.05 \'91.\'92 0.1 \'91 \'92 1\
\
Residual standard error: 8.774 on 44 degrees of freedom\
Multiple R-squared:  0.7149,	Adjusted R-squared:  0.6825 \
F-statistic: 22.07 on 5 and 44 DF,  p-value: 5.35e-11\
\
> #Additional Step: eliminate the independent variables that have little impact on predicting mpg to see impact:\
> lm(mpg ~ vehicle_length + ground_clearance, data=mecha_mpg)\
\
Call:\
lm(formula = mpg ~ vehicle_length + ground_clearance, data = mecha_mpg)\
\
Coefficients:\
     (Intercept)    vehicle_length  ground_clearance  \
         -91.557             6.081             3.567  \
\
> summary(lm(mpg ~ vehicle_length + ground_clearance, data=mecha_mpg)) \
\
Call:\
lm(formula = mpg ~ vehicle_length + ground_clearance, data = mecha_mpg)\
\
Residuals:\
    Min      1Q  Median      3Q     Max \
-17.493  -7.705   1.344   6.642  18.500 \
\
Coefficients:\
                 Estimate Std. Error t value Pr(>|t|)    \
(Intercept)      -91.5573    13.9649  -6.556 3.86e-08 ***\
vehicle_length     6.0811     0.6732   9.033 7.68e-12 ***\
ground_clearance   3.5669     0.5401   6.604 3.26e-08 ***\
---\
Signif. codes:  0 \'91***\'92 0.001 \'91**\'92 0.01 \'91*\'92 0.05 \'91.\'92 0.1 \'91 \'92 1\
\
Residual standard error: 9.078 on 47 degrees of freedom\
Multiple R-squared:  0.674,	Adjusted R-squared:  0.6601 \
F-statistic: 48.59 on 2 and 47 DF,  p-value: 3.637e-12\
\
> #2. Import and read in the Suspension_Coil.csv file as a table\
> mecha_coil <- read.csv(file='./data/Suspension_Coil.csv',check.names=F,stringsAsFactors = F) \
> #3. Create a total_summary dataframe using the summarize() function to get the mean, median, variance, and standard deviation of the suspension coil\'92s PSI column.\
> total_summary <- mecha_coil %>% summarize(Mean_PSI=mean(PSI),\
+                                           Median_PSI=median(PSI),\
+                                           Var_PSI=var(PSI),\
+                                           Std_Dev_PSI=sd(PSI),\
+                                           Num_Coil=n(), .groups = 'keep') \
> #4. Create a lot_summary dataframe using the group_by() and the summarize() functions to group each manufacturing lot.                                                                \
> lot_summary <- mecha_coil  %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),\
+                                                                          Median_PSI=median(PSI),\
+                                                                          Var_PSI=var(PSI),\
+                                                                          Std_Dev_PSI=sd(PSI),\
+                                                                          Num_Coil=n(), .groups = 'keep')                                      \
> #box plot: PSI Whole lot\
> plt1 <- ggplot(mecha_coil,aes(y=PSI)) #import dataset into ggplot2\
> plt1 + geom_boxplot() #add boxplot\
> #box plot: PSI each indicdiual Lot\
> plt2 <- ggplot(mecha_coil,aes(x=Manufacturing_Lot,y=PSI)) #import dataset into ggplot2\
> plt2 + geom_boxplot()\
> #1. use t.test() to determine if the PSI across ALL lots is statistically different from the pop. mean of 1,500 PSI.\
> t.test(mecha_coil$PSI,mu=1500)\
\
	One Sample t-test\
\
data:  mecha_coil$PSI\
t = -1.8931, df = 149, p-value = 0.06028\
alternative hypothesis: true mean is not equal to 1500\
95 percent confidence interval:\
 1497.507 1500.053\
sample estimates:\
mean of x \
  1498.78 \
\
> #2. Use t.test() function 3 more times with subset() to determine if PSI for each manufacturing lot is statistically different from the pop. mean of 1,500 PSI\
> lot1 <- subset(mecha_coil, Manufacturing_Lot=="Lot1")\
> lot2 <- subset(mecha_coil, Manufacturing_Lot=="Lot2")\
> lot3 <- subset(mecha_coil, Manufacturing_Lot=="Lot3")\
> t.test(lot1$PSI,mu=1500)\
\
	One Sample t-test\
\
data:  lot1$PSI\
t = 0, df = 49, p-value = 1\
alternative hypothesis: true mean is not equal to 1500\
95 percent confidence interval:\
 1499.719 1500.281\
sample estimates:\
mean of x \
     1500 \
\
> t.test(lot2$PSI,mu=1500)\
\
	One Sample t-test\
\
data:  lot2$PSI\
t = 0.51745, df = 49, p-value = 0.6072\
alternative hypothesis: true mean is not equal to 1500\
95 percent confidence interval:\
 1499.423 1500.977\
sample estimates:\
mean of x \
   1500.2 \
\
> t.test(lot3$PSI,mu=1500)\
\
	One Sample t-test\
\
data:  lot3$PSI\
t = -2.0916, df = 49, p-value = 0.04168\
alternative hypothesis: true mean is not equal to 1500\
95 percent confidence interval:\
 1492.431 1499.849\
sample estimates:\
mean of x \
  1496.14 \
\
> \
> # log10 was not used as the data was not skewed and did not need any smoothing\
> # log10 was not used as the data was not skewed and did not need any smoothing\
> }